@import './button.vars';

:host {
  --height: 36px; // FIXME should be variable??

  --bevel-top: 3px;
  --bevel-end: 3px;
  --bevel-bottom: 3px;
  --bevel-start: 3px;

  --bevel-top: calc(var(--height) * 0.06);
  --bevel-end: calc(var(--height) * 0.085);
  --bevel-bottom: calc(var(--height) * 0.11);
  --bevel-start: calc(var(--height) * 0.085);

  // --border-color: initial;
  --border-color: #00003c;
  // --border-color: #{color(primary, base)};
  --border-radius: 8px; //#{$button-border-radius};
  // --border-style: initial;
  --border-style: solid;
  // --border-width: initial;
  // --border-width: calc(var(--height) * 0.055);
  --border-width: 3px;
  --box-shadow: none;

  --font-size: 14px;

  --overflow: hidden;
}
:host {
  @include margin(4px, 2px, 4px, 2px);
  display: inline-block;
  width: auto;
  height: var(--height);

  color: var(--color);

  font-family: $font-family;
  font-size: var(--font-size);
  font-kerning: none;
  font-weight: $button-font-weight;

  letter-spacing: $button-letter-spacing;

  pointer-events: auto;

  text-align: center;
  text-decoration: none;
  text-overflow: ellipsis;
  text-transform: $button-text-transform;

  user-select: none;

  vertical-align: top;
  vertical-align: -webkit-baseline-middle;

  white-space: nowrap;
}
:host {
  // background: rgb(0, 255, 76); //FIXME remove
  --padding-start: 1.1em;
  --padding-end: 1.1em;
}

/* Button Fills
 * -------------------------------------------------
 */

:host(.button-clear) {
}

:host(.button-solid) {
  --background: #{color(primary, base)};
  --box-shadow: 0 1px 5px rgba(0, 0, 0, 0.3), 1px 2px 3px rgba(0, 0, 0, 0.6);
  --color: #{color(primary, contrast)};
}

:host(.button-outline) {
}

/* Button Expansion
 * -------------------------------------------------
 */

:host(.button-block) {
}

:host(.button-block) .button-native {
}

:host(.button-block) .button-native::after {
}

:host(.button-full) {
}

:host(.button-full) .button-native {
  display: block;
}

:host(.button-full:not(.button-round)) .button-native {
}

/* Button Shapes
 * -------------------------------------------------
 */
:host(.button-round) {
  --border-radius: 64px; //FIXME should be computed somehow
  --padding-start: 26px; //FIXME should be computed somehow
  --padding-end: 26px; //FIXME should be computed somehow
  --padding-top: 0px; //FIXME should be computed somehow
  --padding-bottom: 0px; //FIXME should be computed somehow
}
:host(.button-round.button-has-icon-only) {
  // for round, icon-only buttons we need to cancel any padding
  // except the padding required by the bevel
  --padding-start: var(--bevel-start);
  --padding-end: var(--bevel-end);
  --padding-top: var(--bevel-top);
  --padding-bottom: var(--bevel-bottom);
  width: var(--height);
}

/* Button Colors
 * -------------------------------------------------
 */

/* Button Sizes
 * -------------------------------------------------
 */
:host(.button-x-large) {
  --height: 110px;
}

:host(.button-large) {
  --height: 42px;
}

:host(.button-small) {
}

:host(.button-x-small) {
}

/* Button States
 * -------------------------------------------------
 */

:host(.button-disabled) {
}

:host(.wx-activated) {
}

:host(.wx-focused) {
}

/* Button Icons
 * -------------------------------------------------
 */

::slotted(wx-icon) {
}

::slotted(wx-icon[slot='start']) {
}

::slotted(wx-icon[slot='end']) {
  @include margin(0, -0.2em, 0, 0.3em);
}

::slotted(wx-icon[slot='icon-only']) {
}

/* Button Classes
 * -------------------------------------------------
 */

.button-native {
  @include border-radius(var(--border-radius));
  @include font-smoothing();
  @include margin(0);
  @include padding(var(--bevel-top), var(--bevel-end), var(--bevel-bottom), var(--bevel-start));
  @include text-inherit();

  display: block;
  position: relative;

  width: 100%;
  height: 100%;

  appearance: none;

  background: var(--background);

  border-color: var(--border-color);
  border-style: var(--border-style);
  border-width: var(--border-width);

  box-shadow: var(--box-shadow);
  box-sizing: border-box;

  contain: layout style;
  cursor: pointer;

  line-height: 1;
  opacity: var(--opacity);
  outline: none;
  overflow: var(--overflow);
  transition: var(--transition);
  z-index: 0;
}

.button-native::after {
  @include button-state();
}

.button-native::-moz-focus-inner {
  border: 0;
}

.button-inner {
  // compute the required padding by subtracting the bevel
  // from the expected padding (the bevel creates padding in the native button)
  @include padding(
    calc(var(--padding-top) - var(--bevel-top, 0px)),
    calc(var(--padding-end) - var(--bevel-end, 0px)),
    calc(var(--padding-bottom) - var(--bevel-bottom, 0px)),
    calc(var(--padding-start) - var(--bevel-start, 0px))
  );

  display: flex;
  position: relative;

  flex-flow: row nowrap;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;
  // width: 100%;
  height: 100%;
  z-index: 1;
}

// Button Hover
@media (any-hover: hover) {
  :host(:hover) {
    transition: 0.1s ease-out;
    transform: translateY(-0.025rem);
    filter: brightness(1.075);
  }
}
